# Generated by Django 3.2.1 on 2022-04-19 01:04

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import patient_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_name', models.CharField(default='', max_length=10)),
                ('description', models.TextField(default='No description for this game')),
                ('image', models.ImageField(default='default_game_img.png', upload_to='')),
                ('link', models.CharField(max_length=10, verbose_name='view game')),
                ('score', models.JSONField(default=patient_app.models.default_json, help_text="score as json object that's expected to save", validators=[patient_app.models.validate_json])),
                ('attributes', models.JSONField(default=patient_app.models.default_json, help_text=' \n                                              <ul>\n                                              <li>- This is a json object that defines the attributes of the game . \n                                              keep in mind that this attributes are used to create a game level . </li>\n                                              <li>- Follow the structure above to create multiple attributes in one object . </li>\n                                              <li>- Replace the structure above with {} in case of 0 attributes. </li>\n                                              <li>- Structure references : </li>\n                                              <ol>\n                                              <li> "name" : edit this to the name of your attribute (must be unique). </li>\n                                              <li> "help text" : holds the help text (don\'t edit the key\'s name).</li>\n                                              <li> "default value" : the default value of the attribute .</li></ol></ul>', validators=[patient_app.models.validate_json])),
            ],
            options={
                'verbose_name': 'Game',
            },
        ),
        migrations.CreateModel(
            name='GameLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(default=1, help_text='enter a number to identify the level', null=True)),
                ('attributes', models.JSONField(default=patient_app.models.default_json)),
                ('game', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='patient_app.game')),
            ],
            options={
                'verbose_name': 'Game level',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('therapist', models.CharField(max_length=50)),
                ('note', models.TextField(max_length=500)),
                ('level', models.ManyToManyField(to='patient_app.GameLevel')),
            ],
            options={
                'verbose_name': 'Patient',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PatientScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='patient_app.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_data', models.JSONField(default={'level': ''})),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patient_app.gamelevel')),
                ('score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_app.patientscore')),
            ],
        ),
    ]
